name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: "Your_strong_password123"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Wait for SQL Server to be ready
        run: |
          for i in {1..30}; do
            if /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Your_strong_password123" -Q "SELECT 1" &> /dev/null; then
              echo "SQL Server is up!"
              break
            fi
            echo "Waiting for SQL Server..."
            sleep 5
          done

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        env:
          ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=dotameta;User Id=sa;Password=Your_strong_password123;TrustServerCertificate=True"
        run: dotnet test --no-build --configuration Release --logger trx

      - name: Build Docker images
        run: |
          docker build -t dotametaexplorer -f DotaMetaExplorer/Dockerfile .
          docker build -t telegrambot -f TelegramBot/Dockerfile .
